<apex:component id="custLkp" allowDML="true"
    controller="CETesting.CustomLookupCtlr">
    <apex:stylesheet value="{!UrlFor($Resource.CETesting__jQuery181,'/jquery/jquery-ui.css')}" />
    <apex:includeScript value="{!UrlFor($Resource.CETesting__jQuery181,'/jquery/jquery-1.8.js')}" />
    <apex:includeScript value="{!UrlFor($Resource.CETesting__jQuery181,'/jquery/jquery-ui.js')}" />

    <!-- Required Attributes -->
    <apex:attribute name="sobjectType"
        description="Standard object type on which field set will iterate"
        type="String" required="true" assignTo="{!objectName}" />
    <style>
		.lookupIcon1 {
		    background-image: url(/img/func_icons/util/lookup20.gif);
		    background-position: 0 0;
		    width: 20px;
		    height: 20px;
		    margin-top:1px;
		}
		.lookupInput img {
		    display: none;
		}
		.labelClass {
		    text-align: right;
		    font-weight: bold;
		    width: 20%;
		}
		.bPageBlock .detailList .dataCol {
		    width: 14%;
		}
		.lblClass {
		    Float: right !important;
		    margin-top: 5px;
		    font-weight: bold;
		}
		body .ui-autocomplete {
		    background-color: #D8D8D8;
		}
		.working {
		    background: url({!$Resource.Waiting}) no-repeat right center;
		}
	</style>
    <head>
    <script type="text/javascript">
    var lksrch;
    var additionalfield;

    function OpenLookUpWindow(fapi, tid) {
        var baseURL = "/apex/CustomLookUp";
        baseURL = baseURL + '?fapi=' + fapi;
        baseURL = baseURL + '&objname=' + '{!objectName}';
        lksrch = document.getElementById(tid).value;
        if (lksrch == undefined) {
            lksrch = '';
        }
        baseURL = baseURL + '&lksrch=' + lksrch;
        baseURL = baseURL + '&frm=:myForm';
        baseURL = baseURL + '&txt=' + tid;
        window.open(baseURL, 'Lookup',
                'left=20,top=20,width=718,height=600,toolbar=1,resizable=0');
    }

    function autocompleteLoad(ev, txt, fieldapi) {
        lksrch = txt.value;
        additionalfield = fieldapi;
        var sObjects;
        var queryTerm = '';
        if ($(txt).val().length > 0) {
            $(txt).addClass('working');
        } else {
            $(txt).removeClass('working');
        }
        $("[id$='txtinId']")
                .autocomplete(
                        {
                            delay : 0,
                            minLength : 1,
                            source : function(request, response) {
                                queryTerm = request.term;
                                Visualforce.remoting.Manager
                                        .invokeAction(
                                                '{!$RemoteAction.CustomLookupCtlr.findSObjects}',
                                                "{!objectname}",
                                                queryTerm,
                                                additionalfield,
                                                function(result, event) {
                                                    if (event.type == 'exception') {
                                                        alert(event.message);
                                                    } else {
                                                        response(result);
                                                    }
                                                }, {
                                                    buffer : false
                                                });
                            },
                            select : function(event, ui) {
                                var terms = [ this.value ];
                                terms.pop();
                                terms.push(ui.item.value);
                                this.value = terms;
                                return false;
                            },
                            focus : function() {

                                return false;
                            },
                            open : function() {
                                $(txt).removeClass('working');
                            }
                        }, {
                            escape : true
                        });
    }
</script>


    </head>
    <apex:form id="myForm">
        <apex:pageMessages />
        <apex:pageBlock id="lookUpBlock" mode="maindetail">
            <apex:PageBlockButtons id="pgBtns" location="top">
                <apex:CommandButton id="saveButton" action="{!doSave}" value="Save"
                    style="margin-left: 23%;" rendered="{!isEdit}" />
                <apex:CommandButton id="cancelButton" action="{!cancel}"
                    value="Cancel" rendered="{!isEdit}" />
                <apex:CommandButton id="editButton" value="Edit" action="{!edit}"
                    style="margin-left: 25%;" rendered="{!!isEdit}" />
            </apex:PageBlockButtons>
            <br />
            <apex:pageBlockSection title="" columns="2" rendered="{!!isEdit}">
                <apex:repeat value="{!lstFields}" var="f" id="theRepeat">
                    <apex:pageBlockSectionItem >
                        <apex:outputLabel value="{!f.fieldLabel}" for="txtinId" />
                        <apex:outputLink value="/{!f.refId}" target="_ " id="theLink">{!f.fieldValue}</apex:outputLink>
                    </apex:pageBlockSectionItem>
                </apex:repeat>
            </apex:pageBlockSection>

            <apex:pageBlockSection title="" columns="4" rendered="{!isEdit}">
                <apex:repeat value="{!lstFields}" var="f" id="theRepeat">
                    <apex:pageBlockSectionItem >
                        <apex:outputLabel value="{!f.fieldLabel}" for="txtinId" styleClass="lblClass" />
                    </apex:pageBlockSectionItem>
                    <apex:pageBlockSectionItem >
                        <apex:panelGrid columns="2" >
                            <apex:inputText id="txtinId" style="height: 18px;" value="{!f.fieldValue}" onkeyup="autocompleteLoad(event,this,'{!f.fieldApi}');" />
                            <apex:commandLink id="theCommandLink" onclick="OpenLookUpWindow('{!f.fieldApi}','{!$Component.txtinId}');" style="text-decoration: none; align : center" rerender="Status">
                                <img class="lookupIcon1" title="Lookup (New Window)" onfocus="this.className = 'lookupIconOn';" onblur="this.className = 'lookupIcon';" alt="Lookup (New Window)" src="/s.gif" />
                            </apex:commandLink>
                        </apex:panelGrid>
                    </apex:pageBlockSectionItem>
                </apex:repeat>
            </apex:pageBlockSection>

        </apex:pageBlock>
    </apex:form>
</apex:component>